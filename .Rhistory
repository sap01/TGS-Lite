packrat::status()
install.packages('bnstruct')
packrat::status()
packrat::snapshot()
packrat::status()
install.packages('rjson')
install.packages('minet')
source("https://bioconductor.org/biocLite.R")
biocLite("minet")
packrat::status()
install.packages('bnlearn')
packrat::status()
install.packages(c('R6', 'RBGL', 'Rcpp', 'RcppArmadillo', 'RcppEigen', 'Rgraphviz', 'RoughSets', 'catnet', 'curl', 'devtools', 'digest', 'doParallel', 'doSNOW', 'foreach', 'functional', 'gRain', 'gRbase', 'ggm', 'git2r', 'graph', 'httr', 'iterators', 'jsonlite', 'memoise', 'mime', 'openssl', 'randomForest', 'rstudioapi', 'snow', 'whisker', 'withr'))
packrat::status()
packrat::snapshot()
biocLite("graph")
packrat::status()
biocLite('Rgraphviz')
packrat::status()
biocLite('RBGL')
packrat::status()
packrat::snapshot()
packrat::snapshot()
packrat::status()
lm1 <- lm(Fertility ~ . , data = swiss)
lm1
BIC(lm1)
AIC(lm1)
x <- 1:5
lmx <- lm(x ~ 1)
logLik(lmx)
library(bnlearn)
ls()
rm(list=ls())
ls()
data(learning.test)
res = set.arc(gs(learning.test), "A", "B")
res
modelstring(res)
res2 = model2network(modelstring(res))
res2
all.equal(res, res2)
arcs(res)
bnlearn::arcs(res)
next.candidate.src.node.set <- list('B', 'C')
next.candidate.src.node.set
curr.tgt.node <- 'A'
tgt.node <- 'A'
paste('[', tgt.node, '|')
paste('[', tgt.node, '|', sep = '')
next.modelstring <- paste('[', tgt.node, '|', sep = '')
next.modelstring <- paste(next.modelstring, ']', sep = '')
next.modelstring
print(next.candidate.src.node.set)
list('a','b','c')[[1:2]]
list('a','b','c')
tl <- list('a','b','c')
for (item in tl) print(item)
tgt.node <- 'A'
curr.candidate.src.node.set <- list('B', 'C')
curr.modelstring <- paste('[', tgt.node, '|', sep = '')
if (length(curr.candidate.src.node.set) > 0) {
src.modelstring <- '' curr.candidate.src.node.set[[1]]
if (length(curr.candidate.src.node.set) > 1) {
for (list.idx in 2:length(curr.candidate.src.node.set)) {
src.modelstring <- paste(src.modelstring, ':', src.node.name, sep = '')
}
rm(src.node.name)
}
}
curr.modelstring <- paste(next.modelstring, ']', sep = '')
curr.modelstring <- paste('[', tgt.node, '|', sep = '')
if (length(curr.candidate.src.node.set) > 0) {
src.modelstring <- curr.candidate.src.node.set[[1]]
if (length(curr.candidate.src.node.set) > 1) {
for (list.idx in 2:length(curr.candidate.src.node.set)) {
src.modelstring <- paste(src.modelstring, ':', src.node.name, sep = '')
}
rm(src.node.name)
}
}
curr.modelstring <- paste(curr.modelstring, src.modelstring, ']', sep = '')
curr.modelstring <- paste('[', tgt.node, '|', sep = '')
if (length(curr.candidate.src.node.set) > 0) {
src.modelstring <- curr.candidate.src.node.set[[1]]
if (length(curr.candidate.src.node.set) > 1) {
for (list.idx in 2:length(curr.candidate.src.node.set)) {
src.modelstring <- paste(src.modelstring, ':', curr.candidate.src.node.set[[list.idx]], sep = '')
}
rm(src.node.name)
}
}
curr.modelstring <- paste(curr.modelstring, src.modelstring, ']', sep = '')
curr.modelstring
q()
